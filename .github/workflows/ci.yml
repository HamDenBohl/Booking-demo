name: CI Pipeline

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Builds
        run: ./gradlew clean build

      - name: Upload build artifacts
        if: succes()
        uses: actions/upload-artifacts@v2
        with:
          name: build-artifacts
          path: build


  test:
    runs-on: ubuntu-latest
    needs: build  # Ensure 'build' job completes successfully before starting 'test' job

    steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'zulu'
            java-version: 17

        - name: Download build artifacts
          uses: actions/download-artifact@v2
          with:
            name: build-artifacts
            path: build

        - name: Run tests
          run: ./gradlew test

## VÃ¦rd at overveje om man skal opdele build og test i to jobs eller pipelines