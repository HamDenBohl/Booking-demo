plugins {
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mindrot:jbcrypt:0.4'
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:mysql:1.17.3'

}

test {
	useJUnitPlatform()
}

tasks.register('removeDockerContainers', Exec) {
	description = 'Remove Docker containers defined in docker-compose.yml'
	group = 'docker'

	commandLine 'docker-compose', 'down'

	standardOutput = new ByteArrayOutputStream()
	errorOutput = new ByteArrayOutputStream()
}

tasks.register('removeDockerImages', Exec) {
	dependsOn removeDockerContainers
	description = 'Remove all Docker images'
	group = 'docker'

	commandLine 'docker', 'rmi', '-f', '$(docker images -a -q)'

	standardOutput = new ByteArrayOutputStream()
	errorOutput = new ByteArrayOutputStream()
}

tasks.register('buildDockerImages', Exec) {
	dependsOn removeDockerImages
	description = 'Build Docker images defined in docker-compose.yml'
	group = 'docker'

	commandLine 'docker-compose', 'build'

	standardOutput = new ByteArrayOutputStream()
	errorOutput = new ByteArrayOutputStream()
}

tasks.register('restartDockerContainers', Exec) {
	dependsOn buildDockerImages
	description = 'Restart Docker containers defined in docker-compose.yml'
	group = 'docker'

	commandLine 'docker-compose', 'up', '-d'

	standardOutput = new ByteArrayOutputStream()
	errorOutput = new ByteArrayOutputStream()
}

tasks.register('startDockerContainers', Exec) {
	description = 'Starts Docker containers defined in docker-compose.yml'
	group = 'docker'

	commandLine 'docker-compose', 'up', '-d'

	standardOutput = new ByteArrayOutputStream()
	errorOutput = new ByteArrayOutputStream()
}
